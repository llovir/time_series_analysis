# >
ncvTest(x7)##p = 0.64228
bgtest(x7)## p-value < 2.2e-16
##CN
m<-solve(t(model.matrix(x7))%*%model.matrix(x7))
(sv.vr<-eigen(m)$values)
(CN<-sqrt(max(eigen(m)$values)/min(eigen(m)$values))) #1726915
##normalnost reziduala
plot(fitted(x7),rstandard(x7), xlab="Teorijske vrijednosti", ylab="Standardizirani reziduali")
qqPlot(x7,xlab="Kvantili normalne distribucije",ylab = "Standardizirani reziduali")
ks.test(rstudent(x7),'pnorm',0,1)#p-value = 0.5642
shapiro.test(rstandard(x7))#p-value = 0.03236
jarque.bera.test(rstandard(x7))#p-value = 0.5181
x7$coefficients
confint(x7)
AIC(x7)
#AIC(x6)=
#[1] -4321.196
outlierTest(x7)
##outlieri
dffits(x7)
plot(dffits(x7))
boxplot(dffits(x7))
summary(dffits(x7))
d<-2*sqrt(dim(baza)[2]/dim(baza)[1])
which( abs(dffits(x7))>d)
summary(baza)
cooks.distance(x7)
plot(cooks.distance(x7), ylab="Cookova udaljenost (Price)", main="Cookova udaljenost")
qf(0.5,dim(baza)[2],dim(baza)[1]-dim(baza)[2])
which(cooks.distance(x7)>qf(0.5,dim(baza)[2],dim(baza)[1]-dim(baza)[2]))
which( cooks.distance(x7)==max(cooks.distance(x7)))##podatak 382 je outliercini mi se
##cef
summary(x7)
lambda<--0.16
pr<-(Price^(lambda)-1)/lambda
x7<-lm(formula = pr ~ Mileage+Model, data = baza)
step(x7,direction="backward")
vif(x7)
# ##vif   GVIF Df GVIF^(1/(2*Df))
# Mileage 1.036187  1        1.017933
# Model   1.036187 31        1.000574
# >
ncvTest(x7)##p = 0.64228
bgtest(x7)## p-value < 2.2e-16
##CN
m<-solve(t(model.matrix(x7))%*%model.matrix(x7))
(sv.vr<-eigen(m)$values)
(CN<-sqrt(max(eigen(m)$values)/min(eigen(m)$values))) #1726915
##normalnost reziduala
plot(fitted(x7),rstandard(x7), xlab="Teorijske vrijednosti", ylab="Standardizirani reziduali")
qqPlot(x7,xlab="Kvantili normalne distribucije",ylab = "Standardizirani reziduali")
ks.test(rstudent(x7),'pnorm',0,1)#p-value = 0.5642
shapiro.test(rstandard(x7))#p-value = 0.03236
jarque.bera.test(rstandard(x7))#p-value = 0.5181
x7$coefficients
confint(x7)
AIC(x7)
lambda<--0.01
pr<-(Price^(lambda)-1)/lambda
x7<-lm(formula = pr ~ Mileage+Model, data = baza)
step(x7,direction="backward")
vif(x7)
# ##vif   GVIF Df GVIF^(1/(2*Df))
# Mileage 1.036187  1        1.017933
# Model   1.036187 31        1.000574
# >
ncvTest(x7)##p = 0.64228
bgtest(x7)## p-value < 2.2e-16
lambda<--0.04
pr<-(Price^(lambda)-1)/lambda
x7<-lm(formula = pr ~ Mileage+Model, data = baza)
step(x7,direction="backward")
vif(x7)
# ##vif   GVIF Df GVIF^(1/(2*Df))
# Mileage 1.036187  1        1.017933
# Model   1.036187 31        1.000574
# >
ncvTest(x7)##p = 0.64228
bgtest(x7)## p-value < 2.2e-16
##CN
m<-solve(t(model.matrix(x7))%*%model.matrix(x7))
(sv.vr<-eigen(m)$values)
(CN<-sqrt(max(eigen(m)$values)/min(eigen(m)$values))) #1726915
##normalnost reziduala
plot(fitted(x7),rstandard(x7), xlab="Teorijske vrijednosti", ylab="Standardizirani reziduali")
qqPlot(x7,xlab="Kvantili normalne distribucije",ylab = "Standardizirani reziduali")
ks.test(rstudent(x7),'pnorm',0,1)#p-value = 0.5642
shapiro.test(rstandard(x7))#p-value = 0.03236
jarque.bera.test(rstandard(x7))#p-value = 0.5181
x7$coefficients
lambda<--0.2
pr<-(Price^(lambda)-1)/lambda
x7<-lm(formula = pr ~ Mileage+Model, data = baza)
step(x7,direction="backward")
vif(x7)
# ##vif   GVIF Df GVIF^(1/(2*Df))
# Mileage 1.036187  1        1.017933
# Model   1.036187 31        1.000574
# >
ncvTest(x7)##p = 0.64228
bgtest(x7)## p-value < 2.2e-16
##CN
m<-solve(t(model.matrix(x7))%*%model.matrix(x7))
(sv.vr<-eigen(m)$values)
(CN<-sqrt(max(eigen(m)$values)/min(eigen(m)$values))) #1726915
##normalnost reziduala
plot(fitted(x7),rstandard(x7), xlab="Teorijske vrijednosti", ylab="Standardizirani reziduali")
qqPlot(x7,xlab="Kvantili normalne distribucije",ylab = "Standardizirani reziduali")
ks.test(rstudent(x7),'pnorm',0,1)#p-value = 0.5642
shapiro.test(rstandard(x7))#p-value = 0.03236
jarque.bera.test(rstandard(x7))#p-value = 0.5181
x7$coefficients
confint(x7)
AIC(x7)
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.5,1,0.3))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.2,1,0.3))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.2,1,0.1))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.2,1,0.1))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.2,1,0.5))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.2,1,0.8))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.2,1,0.4))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.4,1,0.4))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.45,1,0.4))
lambda<--0.2
pr<-(Price^(lambda)-1)/lambda
x7<-lm(formula = pr ~ Mileage+Model, data = baza)
step(x7,direction="backward")
vif(x7)
# ##vif   GVIF Df GVIF^(1/(2*Df))
# Mileage 1.036187  1        1.017933
# Model   1.036187 31        1.000574
# >
ncvTest(x7)##p = 0.64228
bgtest(x7)## p-value < 2.2e-16
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.17,1,0.4))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.1,1,0.4))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.1,1,0.1))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.1,1,0.7))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.1,1,0.7))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.1,1,0.3))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.19,1,0.3))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.2,1,0.3))
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.25,1,0.3))
setwd("C:/Users/Korisnik/Downloads")
baza<-read.csv2("kuiper.csv",header = TRUE,sep=',')
str(baza)
attach(baza)
#oretvaranje u numeričke
Price1 <- as.numeric(as.character(Price))
Liter1 <- as.numeric(as.character(Liter))
#uklanjanje nenumeričkih
baza<-baza[,-c(1,8)]
str(baza)
#dodavanje pretvorenih numeričkih u bazu
Price1
baza["Price"]<-Price1
str(baza)
baza["Liter"]<-Liter1
is.numeric(baza$Liter)
Price<-baza$Price
Liter<-baza$Liter
is.numeric(Price)
#Price
summary(Price)
sd(Price)
par(mfrow=c(1,2))
##cef
summary(x7)
install.packages("MASS")
library("MASS")
install.packages("car")
library("car")
install.packages("qqplotr")
library("qqplotr")
install.packages("lmtest")
library(lmtest)
install.packages("fBasics")
library(fBasics)
install.packages("tseries")
library("tseries")
install.packages("ModelMetrics")
library("ModelMetrics")
install.packages('TSA')
library('TSA')
x7<-lm(formula = pr ~ Mileage+Model, data = baza)
step(x7,direction="backward")
lambda<--0.15
pr<-(Price^(lambda)-1)/lambda
x7<-lm(formula = pr ~ Mileage+Model, data = baza)
step(x7,direction="backward")
vif(x7)
##cef
summary(x7)
Price<-baza$Price
setwd("C:/Users/Korisnik/Downloads")
baza<-read.csv2("kuiper.csv",header = TRUE,sep=',')
str(baza)
attach(baza)
#oretvaranje u numeričke
Price1 <- as.numeric(as.character(Price))
Liter1 <- as.numeric(as.character(Liter))
#uklanjanje nenumeričkih
baza<-baza[,-c(1,8)]
str(baza)
#dodavanje pretvorenih numeričkih u bazu
Price1
baza["Price"]<-Price1
str(baza)
baza["Liter"]<-Liter1
is.numeric(baza$Liter)
Price<-baza$Price
Liter<-baza$Liter
is.numeric(Price)
#Price
summary(Price)
sd(Price)
par(mfrow=c(1,2))
hist(Price, main="Histogram",ylab="Frekvencija",  col="red" )
boxplot(Price, ylim=c(0,70000), main="Kutijasti dijagram varijable Price")
shapiro.test(Price)
#Mileage
summary(Mileage)
install.packages("MASS")
library("MASS")
install.packages("car")
library("car")
install.packages("qqplotr")
library("qqplotr")
install.packages("lmtest")
library(lmtest)
install.packages("fBasics")
library(fBasics)
install.packages("tseries")
library("tseries")
install.packages("ModelMetrics")
library("ModelMetrics")
install.packages('TSA')
library('TSA')
#sal<-(Price^(lambda)-1)/lambda
x<-lm(formula = Price ~ Mileage+Make+Model+Trim+Type+Liter+Cylinder+Doors+Cruise+Leather, data = baza)
step(x,direction="backward")
vif(x)
ncvTest(x)
boxcox(x,plotit=TRUE,lambda=seq(0.15,1,0.1))
#drugimodel
x<-lm(formula = sal ~ Mileage+Make+Model+Trim+Type+Liter+Cylinder+Doors+Cruise+Leather, data = baza)
step(x,direction="backward")
vif(x)
ncvTest(x)
#treci
x1<-lm(formula = sal ~ Mileage+Make+Model+Trim+Type+Liter+Cylinder+Doors+Cruise, data = baza)
step(x,direction="backward")
vif(x1)
ncvTest(x1)
#cetvrti
x2<-lm(formula = Price ~ Mileage+Make+Model+Type+Liter+Cylinder+Doors, data = baza)
step(x2,direction="backward")
vif(x2)
ncvTest(x2)
#peti
x3<-lm(formula = Price ~ Mileage+Make+Model+Liter+Type+Doors, data = baza)
step(x3,direction="backward")
vif(x3)
ncvTest(x3)
#sesti
x4<-lm(formula = Price ~ Mileage+Make+Model+Type+Doors, data = baza)
step(x4,direction="backward")
vif(x4)
ncvTest(x4)
#sedmi
x5<-lm(formula = Price ~ Mileage+Make+Model+Doors, data = baza)
step(x5,direction="backward")
vif(x5)
ncvTest(x5)
#make nije uopceskuzio ne znam zasto pa sam ga ja izbacila
#osmi
x6<-lm(formula = Price ~ Mileage+Model, data = baza)
step(x6,direction="backward")
vif(x6)
ncvTest(x6)
bgtest(x6)
##Box-Cox Tranformacije
#tranformirani model
boxcox(x6,plotit=TRUE,lambda=seq(-0.25,1,0.3))
lambda<--0.15
#sesti
x4<-lm(formula = Price ~ Mileage+Make+Model+Type+Doors, data = baza)
step(x4,direction="backward")
vif(x4)
ncvTest(x4)
#sedmi
x5<-lm(formula = Price ~ Mileage+Make+Model+Doors, data = baza)
step(x5,direction="backward")
vif(x5)
ncvTest(x5)
#make nije uopceskuzio ne znam zasto pa sam ga ja izbacila
#osmi
x6<-lm(formula = Price ~ Mileage+Model, data = baza)
step(x6,direction="backward")
vif(x6)
ncvTest(x6)
setwd("C:/Users/Korisnik/Desktop/time_series")
podaci <- read.csv("putnici.csv")
podaci <- read.csv("putnici.csv")
str(podaci)
attach(podaci)
dim(podaci) #144
install.packages("tseries")
install.packages("fGarch")
install.packages("TSA")
install.packages("aTSA")
install.packages("FinTS")
install.packages("astsa")
install.packages("forecast")
library("tseries")
library("TSA")
library("fGarch")
library("aTSA")
library("FinTS")
library("astsa")
library("forecast")
acf <- stats::acf
arima <- stats::arima
putnik <- podaci$Airlinepassengers
putnik
u <- ts(putnik, start=c(1949,1), end=c(1960,12), frequency = 12)
u
length(u)
v<-window(u, end=c(1956,12))
length(v)
v
summary(v)
sd(v)
par(mfrow = c(1,1))
plot(u, typecol="blue", xlab = "Date", ylab = "Number of passengers",main="The number of airline passengers per month")
plot(v,type="o", xlab="Date",ylab="Number of passengers",col="darkblue",main="The number of airline passengers per month")
##increasing trend
lines(v)
summary(v)
(minimalan<-Month[putnik==104])
(maximalan<-Month[putnik==413])
str(podaci)
#comparison of months:
v7 <- window(v, start = c(1949,7), freq = T)
v11 <- window(v, start = c(1949,11), freq = T)
mean(v7)
mean(v11)
boxplot(v7,v11, col="darkblue",names = c("July","November"))
acf(v, main="Autocorrelation function", xlab='Lag', ylab='ACF', lag.max=72)
plot(v)
boxplot(v~cycle(v), col='darkblue', names=c('January','February','March','April','May','June','July','August',
'September','October','November','December'), xlab='Month', ylab='Number of passengers',main='Number of passengers per month')
putnici7mj<-window(v, start=c(1949,7), freq=T)
putnici11mj<-window(v,start=c(1949,11),freq=T)
plot(putnici7mj, ylim=c(50,460), col='darkblue', lwd=2, xlab='Date', ylab='Number of passengers', main='Number of passengers in july and november')
lines(putnici11mj, col='red', lwd=2)
legend("topleft", legend=c('July','November'), col=c('darkblue','red'), lty=c(1,1))
# log
putnik <- ts(podaci$Airlinepassengers, start = c(1949, 1), freq = 12)
putnikM <- window(putnik, end = c(1956, 12))
length(putnikM)
length(putnik)
length(putnikM)
logputnik<-log(putnik)
plot(putnikM, xlab = "Date", ylab = "Number of passengers", col = "darkblue")
points(putnikM, col = "red", pch = 16, cex = 0.5)
adf.test(putnikM)
plot(diff(putnikM))
logputnikM <- log(putnikM)
plot(logputnikM,xlab = "Date", ylab = "log (Number of passengers)", col = "darkblue")
points(logputnikM, col = "red", pch = 16, cex = 0.5)
acf(logputnikM, main="Autocorrelation  function", xlab="Lag",lag.max = 72)
acf(logputnikM, lag.max = 72)
DlogputnikM <- diff(logputnikM)
plot(DlogputnikM , xlab = "Date", ylab = "log- Number of passengers", col = "darkblue")
points(DlogputnikM, col = "red", pch = 16, cex = 0.5)
acf(DlogputnikM, main="Autocorrelation  function", xlab="Lag",lag.max = 72)
adf.test(DlogputnikM)
diff_ss12 <- diff(DlogputnikM,lag=12)
adf.test(diff_ss12)
plot(diff_ss12, main="", xlab="Date", ylab = "log- Number of passengers")
acf(diff_ss12, main="Autocorrelation function", lag.max=72, xlab="Lag")
plot(diff_ss12, col='darkblue', main='', xlab='Date', ylab='Number of passengers')
library("TSA")
putnikM <- window(putnik, end = c(1956, 12))
length(putnik)
length(putnikM)
plot(putnikM, xlab = "Date", ylab = "Number of passengers", col = "darkblue")
points(putnikM, col = "red", pch = 16, cex = 0.5)
adf.test(putnikM)
plot(diff(putnikM))
logputnikM <- log(putnikM)
plot(logputnikM,xlab = "Date", ylab = "log (Number of passengers)", col = "darkblue")
points(logputnikM, col = "red", pch = 16, cex = 0.5)
acf(logputnikM, main="Autocorrelation  function", xlab="Lag",lag.max = 72)
acf(logputnikM, lag.max = 72)
DlogputnikM <- diff(logputnikM)
plot(DlogputnikM , xlab = "Date", ylab = "log- Number of passengers", col = "darkblue")
points(DlogputnikM, col = "red", pch = 16, cex = 0.5)
acf(DlogputnikM, main="Autocorrelation  function", xlab="Lag",lag.max = 72)
adf.test(DlogputnikM)
diff_ss12 <- diff(DlogputnikM,lag=12)
adf.test(diff_ss12)
plot(diff_ss12, main="", xlab="Date", ylab = "log- Number of passengers")
acf(diff_ss12, main="Autocorrelation function", lag.max=72, xlab="Lag")
plot(diff_ss12, col='darkblue', main='', xlab='Date', ylab='Number of passengers')
library("TSA")
#AIC
najboljiAICs <- function(armax, mamax, podaci) {
redAR <- c()
redMA <- c()
redSAR <- c()
redSMA <- c()
AICvrijednost <- c()
for (i in 0:armax) {
for (j in 0:mamax) {
for (k in 0:armax) {
for (l in 0:mamax) {
fitaic <- tryCatch(AIC(arima(podaci, c(i, 0, j), seasonal = c(k, 0, l))), error = function(e) NaN)
redAR <- c(redAR,i)
redMA <- c(redMA, j)
redSAR <- c(redSAR, k)
redSMA <- c(redSMA, l)
AICvrijednost <- c(AICvrijednost, fitaic)
}
}
}
}
rez <- data.frame(p = redAR, q = redMA, P = redSAR, Q = redSMA, AICvrijednosti = AICvrijednost)
rez <- rez[order(rez$AICvrijednosti), ]
return(rez[1:min(10,length(redAR)), ])
}
najboljiAICs(2,2,diff_ss12)
# 1 0 0 1      -288.3126
# 1 2 0 1      -288.0699
# 0 2 0 1      -287.9115
# 0 1 1 1      -287.6364
# 0 1 0 2      -287.6330
# 1 1 0 1      -286.7063
# 2 0 0 1      -286.4467
#2 1 0 2      -286.3992
#log
#BIC
najboljiBICs <- function(armax, mamax, podaci) {
redAR <- c()
redMA <- c()
redSAR <- c()
redSMA <- c()
BICvrijednost <- c()
for (i in 0:armax) {
for (j in 0:mamax) {
for (k in 0:armax) {
for (l in 0:mamax) {
fitbic <- tryCatch(BIC(arima(podaci, c(i, 0, j), seasonal = c(k, 0, l))), error = function(e) NaN)
redAR <- c(redAR,i)
redMA <- c(redMA, j)
redSAR <- c(redSAR, k)
redSMA <- c(redSMA, l)
BICvrijednost <- c(BICvrijednost, fitbic)
}
}
}
}
rez <- data.frame(p = redAR, q = redMA, P = redSAR, Q = redSMA, BICvrijednosti = BICvrijednost)
rez <- rez[order(rez$BICvrijednosti), ]
return(rez[1:min(10,length(redAR)), ])
}
najboljiBICs(2, 2, diff_ss12)
model<- sarima(logputnikM, 0,1,1 ,0, 1, 1, 12)
model$fit
BIC(model$fit)
coef(model$fit)
confint(model$fit)
Box.test(model$fit$residuals, type = "Ljung-Box")
model0<- sarima(logputnikM, 2,1,1,0,1,1, 12)
